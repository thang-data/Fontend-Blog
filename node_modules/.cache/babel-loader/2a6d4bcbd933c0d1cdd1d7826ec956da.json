{"ast":null,"code":"import _slicedToArray from\"C:/Users/nguye/Desktop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{getOtherInfo}from'../../redux/actions/userAction';import Loading from'../global/Loading';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var OtherInfo=function OtherInfo(_ref){var id=_ref.id;var _useState=useState(),_useState2=_slicedToArray(_useState,2),other=_useState2[0],setOther=_useState2[1];var _useSelector=useSelector(function(state){return state;}),otherInfo=_useSelector.otherInfo;var dispatch=useDispatch();useEffect(function(){if(!id)return;if(otherInfo.every(function(user){return user._id!==id;})){dispatch(getOtherInfo(id));}else{var newUser=otherInfo.find(function(user){return user._id===id;});if(newUser)setOther(newUser);}},[id,otherInfo,dispatch]);if(!other)return/*#__PURE__*/_jsx(Loading,{});return/*#__PURE__*/_jsxs(\"div\",{className:\"profile_info text-center rounded\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"info_avatar\",children:/*#__PURE__*/_jsx(\"img\",{src:other.avatar,alt:\"avatar\"})}),/*#__PURE__*/_jsx(\"h5\",{className:\"text-uppercase text-danger\",children:other.role}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Name: \",/*#__PURE__*/_jsx(\"span\",{className:\"text-info\",children:other.name})]}),/*#__PURE__*/_jsx(\"div\",{children:\"Email / Phone number\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-info\",children:other.account}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Join Date: \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#ffc107'},children:new Date(other.createdAt).toLocaleString()})]})]});};export default OtherInfo;","map":{"version":3,"sources":["C:/Users/nguye/Desktop/client/src/components/profile/OtherInfo.tsx"],"names":["React","useState","useEffect","useSelector","useDispatch","getOtherInfo","Loading","OtherInfo","id","other","setOther","state","otherInfo","dispatch","every","user","_id","newUser","find","avatar","role","name","account","color","Date","createdAt","toLocaleString"],"mappings":"oJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,YAAT,KAA6B,gCAA7B,CAGA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,C,wFAOA,GAAMC,CAAAA,SAA2B,CAAG,QAA9BA,CAAAA,SAA8B,MAAU,IAARC,CAAAA,EAAQ,MAARA,EAAQ,CAC5C,cAA0BP,QAAQ,EAAlC,wCAAOQ,KAAP,eAAcC,QAAd,eAEA,iBAAsBP,WAAW,CAAC,SAACQ,KAAD,QAAsBA,CAAAA,KAAtB,EAAD,CAAjC,CAAQC,SAAR,cAAQA,SAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAEAF,SAAS,CAAC,UAAM,CACd,GAAG,CAACM,EAAJ,CAAQ,OAER,GAAGI,SAAS,CAACE,KAAV,CAAgB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,GAAL,GAAaR,EAAjB,EAApB,CAAH,CAA4C,CAC1CK,QAAQ,CAACR,YAAY,CAACG,EAAD,CAAb,CAAR,CACD,CAFD,IAEK,CACH,GAAMS,CAAAA,OAAO,CAAGL,SAAS,CAACM,IAAV,CAAe,SAAAH,IAAI,QAAIA,CAAAA,IAAI,CAACC,GAAL,GAAaR,EAAjB,EAAnB,CAAhB,CACA,GAAGS,OAAH,CAAYP,QAAQ,CAACO,OAAD,CAAR,CACb,CACF,CATQ,CASP,CAACT,EAAD,CAAKI,SAAL,CAAgBC,QAAhB,CATO,CAAT,CAYA,GAAG,CAACJ,KAAJ,CAAW,mBAAO,KAAC,OAAD,IAAP,CACX,mBACE,aAAK,SAAS,CAAC,kCAAf,wBACE,YAAK,SAAS,CAAC,aAAf,uBACE,YAAK,GAAG,CAAEA,KAAK,CAACU,MAAhB,CAAwB,GAAG,CAAC,QAA5B,EADF,EADF,cAKE,WAAI,SAAS,CAAC,4BAAd,UACGV,KAAK,CAACW,IADT,EALF,cASE,6CACQ,aAAM,SAAS,CAAC,WAAhB,UACHX,KAAK,CAACY,IADH,EADR,GATF,cAeE,6CAfF,cAgBE,aAAM,SAAS,CAAC,WAAhB,UACGZ,KAAK,CAACa,OADT,EAhBF,cAoBE,kDACa,aAAM,KAAK,CAAE,CAACC,KAAK,CAAE,SAAR,CAAb,UACP,GAAIC,CAAAA,IAAJ,CAASf,KAAK,CAACgB,SAAf,EAA0BC,cAA1B,EADO,EADb,GApBF,GADF,CA4BD,CA/CD,CAiDA,cAAenB,CAAAA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { getOtherInfo } from '../../redux/actions/userAction'\nimport { RootStore, IUser } from '../../utils/TypeScript'\n\nimport Loading from '../global/Loading'\n\n\ninterface IProps {\n  id: string\n}\n\nconst OtherInfo: React.FC<IProps> = ({id}) => {\n  const [other, setOther] = useState<IUser>()\n\n  const { otherInfo } = useSelector((state: RootStore) => state)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if(!id) return;\n\n    if(otherInfo.every(user => user._id !== id)){\n      dispatch(getOtherInfo(id))\n    }else{\n      const newUser = otherInfo.find(user => user._id === id)\n      if(newUser) setOther(newUser)\n    }\n  },[id, otherInfo, dispatch])\n\n\n  if(!other) return <Loading />;\n  return (\n    <div className=\"profile_info text-center rounded\">\n      <div className=\"info_avatar\">\n        <img src={other.avatar} alt=\"avatar\" />\n      </div>\n\n      <h5 className=\"text-uppercase text-danger\">\n        {other.role}\n      </h5>\n\n      <div>\n        Name: <span className=\"text-info\">\n          {other.name}\n        </span>\n      </div>\n\n      <div>Email / Phone number</div>\n      <span className=\"text-info\">\n        {other.account}\n      </span>\n\n      <div>\n        Join Date: <span style={{color: '#ffc107'}}>\n          { new Date(other.createdAt).toLocaleString() }\n        </span>\n      </div>\n    </div>\n  )\n}\n\nexport default OtherInfo\n"]},"metadata":{},"sourceType":"module"}