{"ast":null,"code":"import { GET_BLOGS_USER_ID, CREATE_BLOGS_USER_ID, DELETE_BLOGS_USER_ID } from '../types/blogType';\n\nconst blogsUserReducer = (state = [], action) => {\n  switch (action.type) {\n    case GET_BLOGS_USER_ID:\n      if (state.every(item => item.id !== action.payload.id)) {\n        return [...state, action.payload];\n      } else {\n        return state.map(item => item.id === action.payload.id ? action.payload : item);\n      }\n\n    case CREATE_BLOGS_USER_ID:\n      return state.map(item => item.id === action.payload.user._id ? { ...item,\n        blogs: [action.payload, ...item.blogs]\n      } : item);\n\n    case DELETE_BLOGS_USER_ID:\n      return state.map(item => item.id === action.payload.user._id ? { ...item,\n        blogs: item.blogs.filter(blog => blog._id !== action.payload._id)\n      } : item);\n\n    default:\n      return state;\n  }\n};\n\nexport default blogsUserReducer;","map":{"version":3,"sources":["C:/Users/nguye/Desktop/client/src/redux/reducers/blogsUserReducer.ts"],"names":["GET_BLOGS_USER_ID","CREATE_BLOGS_USER_ID","DELETE_BLOGS_USER_ID","blogsUserReducer","state","action","type","every","item","id","payload","map","user","_id","blogs","filter","blog"],"mappings":"AAEA,SAEEA,iBAFF,EAGEC,oBAHF,EAIEC,oBAJF,QAMO,mBANP;;AASA,MAAMC,gBAAgB,GAAG,CACvBC,KAAmB,GAAG,EADC,EAEvBC,MAFuB,KAGN;AACjB,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKN,iBAAL;AACE,UAAGI,KAAK,CAACG,KAAN,CAAYC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,OAAP,CAAeD,EAA/C,CAAH,EAAsD;AACpD,eAAO,CAAC,GAAGL,KAAJ,EAAWC,MAAM,CAACK,OAAlB,CAAP;AAED,OAHD,MAGK;AACH,eAAON,KAAK,CAACO,GAAN,CAAUH,IAAI,IACnBA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACK,OAAP,CAAeD,EAA3B,GACEJ,MAAM,CAACK,OADT,GAEEF,IAHG,CAAP;AAKD;;AAEH,SAAKP,oBAAL;AACE,aAAOG,KAAK,CAACO,GAAN,CAAUH,IAAI,IACnBA,IAAI,CAACC,EAAL,KAAaJ,MAAM,CAACK,OAAP,CAAeE,IAAhB,CAA+BC,GAA3C,GACE,EACA,GAAGL,IADH;AAEAM,QAAAA,KAAK,EAAE,CAACT,MAAM,CAACK,OAAR,EAAiB,GAAGF,IAAI,CAACM,KAAzB;AAFP,OADF,GAKEN,IANG,CAAP;;AASF,SAAKN,oBAAL;AACE,aAAOE,KAAK,CAACO,GAAN,CAAUH,IAAI,IACnBA,IAAI,CAACC,EAAL,KAAaJ,MAAM,CAACK,OAAP,CAAeE,IAAhB,CAA+BC,GAA3C,GACE,EACA,GAAGL,IADH;AAEAM,QAAAA,KAAK,EAAEN,IAAI,CAACM,KAAL,CAAWC,MAAX,CAAkBC,IAAI,IAC3BA,IAAI,CAACH,GAAL,KAAaR,MAAM,CAACK,OAAP,CAAeG,GADvB;AAFP,OADF,GAOEL,IARG,CAAP;;AAUF;AACE,aAAOJ,KAAP;AAnCJ;AAqCD,CAzCD;;AA4CA,eAAeD,gBAAf","sourcesContent":["import { IUser } from '../../utils/TypeScript'\n\nimport {\n  IBlogsUser,\n  GET_BLOGS_USER_ID,\n  CREATE_BLOGS_USER_ID,\n  DELETE_BLOGS_USER_ID,\n  IBlogUserType\n} from '../types/blogType'\n\n\nconst blogsUserReducer = (\n  state: IBlogsUser[] = [],\n  action: IBlogUserType\n): IBlogsUser[] => {\n  switch(action.type){\n    case GET_BLOGS_USER_ID:\n      if(state.every(item => item.id !== action.payload.id)){\n        return [...state, action.payload]\n\n      }else{\n        return state.map(item => (\n          item.id === action.payload.id\n          ? action.payload\n          : item\n        ))\n      }\n    \n    case CREATE_BLOGS_USER_ID:\n      return state.map(item => (\n        item.id === (action.payload.user as IUser)._id\n        ? {\n          ...item,\n          blogs: [action.payload, ...item.blogs]\n        }\n        : item\n      ))\n\n    case DELETE_BLOGS_USER_ID:\n      return state.map(item => (\n        item.id === (action.payload.user as IUser)._id\n        ? {\n          ...item,\n          blogs: item.blogs.filter(blog => (\n            blog._id !== action.payload._id\n          ))\n        }\n        : item\n      ))\n    default:\n      return state;\n  }\n}\n\n\nexport default blogsUserReducer;"]},"metadata":{},"sourceType":"module"}