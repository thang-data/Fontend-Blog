{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Desktop\\\\client\\\\src\\\\SocketClient.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CREATE_COMMENT, REPLY_COMMENT, UPDATE_COMMENT, UPDATE_REPLY, DELETE_COMMENT, DELETE_REPLY } from './redux/types/commentType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SocketClient = () => {\n  _s();\n\n  const {\n    socket\n  } = useSelector(state => state);\n  const dispatch = useDispatch(); // Create Comment\n\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('createComment', data => {\n      dispatch({\n        type: CREATE_COMMENT,\n        payload: data\n      });\n    });\n    return () => {\n      socket.off('createComment');\n    };\n  }, [socket, dispatch]); // Reply Comment\n\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('replyComment', data => {\n      dispatch({\n        type: REPLY_COMMENT,\n        payload: data\n      });\n    });\n    return () => {\n      socket.off('replyComment');\n    };\n  }, [socket, dispatch]); // Update Comment\n\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('updateComment', data => {\n      dispatch({\n        type: data.comment_root ? UPDATE_REPLY : UPDATE_COMMENT,\n        payload: data\n      });\n    });\n    return () => {\n      socket.off('updateComment');\n    };\n  }, [socket, dispatch]); // Delete Comment\n\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('deleteComment', data => {\n      dispatch({\n        type: data.comment_root ? DELETE_REPLY : DELETE_COMMENT,\n        payload: data\n      });\n    });\n    return () => {\n      socket.off('deleteComment');\n    };\n  }, [socket, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SocketClient, \"AHL31ymIj2fHeNs027J4QBt95x8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SocketClient;\nexport default SocketClient;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocketClient\");","map":{"version":3,"sources":["C:/Users/nguye/Desktop/client/src/SocketClient.tsx"],"names":["React","useEffect","useDispatch","useSelector","CREATE_COMMENT","REPLY_COMMENT","UPDATE_COMMENT","UPDATE_REPLY","DELETE_COMMENT","DELETE_REPLY","SocketClient","socket","state","dispatch","on","data","type","payload","off","comment_root"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAIA,SACEC,cADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,YAJF,EAKEC,cALF,EAMEC,YANF,QAOO,2BAPP;;;AASA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAaR,WAAW,CAAES,KAAD,IAAsBA,KAAvB,CAA9B;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B,CAFyB,CAIzB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACU,MAAJ,EAAY;AAEZA,IAAAA,MAAM,CAACG,EAAP,CAAU,eAAV,EAA4BC,IAAD,IAAoB;AAC7CF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEZ,cAAR;AAAwBa,QAAAA,OAAO,EAAEF;AAAjC,OAAD,CAAR;AACD,KAFD;AAIA,WAAO,MAAM;AAAEJ,MAAAA,MAAM,CAACO,GAAP,CAAW,eAAX;AAA6B,KAA5C;AAED,GATQ,EASP,CAACP,MAAD,EAASE,QAAT,CATO,CAAT,CALyB,CAgBzB;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACU,MAAJ,EAAY;AAEZA,IAAAA,MAAM,CAACG,EAAP,CAAU,cAAV,EAA2BC,IAAD,IAAoB;AAC5CF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEX,aAAR;AAAuBY,QAAAA,OAAO,EAAEF;AAAhC,OAAD,CAAR;AACD,KAFD;AAIA,WAAO,MAAM;AAAEJ,MAAAA,MAAM,CAACO,GAAP,CAAW,cAAX;AAA4B,KAA3C;AAED,GATQ,EASP,CAACP,MAAD,EAASE,QAAT,CATO,CAAT,CAjByB,CA4BzB;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACU,MAAJ,EAAY;AAEZA,IAAAA,MAAM,CAACG,EAAP,CAAU,eAAV,EAA4BC,IAAD,IAAoB;AAC7CF,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAED,IAAI,CAACI,YAAL,GAAoBZ,YAApB,GAAmCD,cADlC;AAEPW,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAID,KALD;AAOA,WAAO,MAAM;AAAEJ,MAAAA,MAAM,CAACO,GAAP,CAAW,eAAX;AAA6B,KAA5C;AACD,GAXQ,EAWP,CAACP,MAAD,EAASE,QAAT,CAXO,CAAT,CA7ByB,CA2CzB;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACU,MAAJ,EAAY;AAEZA,IAAAA,MAAM,CAACG,EAAP,CAAU,eAAV,EAA4BC,IAAD,IAAoB;AAC7CF,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAED,IAAI,CAACI,YAAL,GAAoBV,YAApB,GAAmCD,cADlC;AAEPS,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAID,KALD;AAOA,WAAO,MAAM;AAAEJ,MAAAA,MAAM,CAACO,GAAP,CAAW,eAAX;AAA6B,KAA5C;AACD,GAXQ,EAWP,CAACP,MAAD,EAASE,QAAT,CAXO,CAAT;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA/DD;;GAAMH,Y;UACeP,W,EACFD,W;;;KAFbQ,Y;AAiEN,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { RootStore, IComment } from './utils/TypeScript'\n\nimport {\n  CREATE_COMMENT,\n  REPLY_COMMENT,\n  UPDATE_COMMENT,\n  UPDATE_REPLY,\n  DELETE_COMMENT,\n  DELETE_REPLY\n} from './redux/types/commentType'\n\nconst SocketClient = () => {\n  const { socket } = useSelector((state: RootStore) => state)\n  const dispatch = useDispatch()\n\n  // Create Comment\n  useEffect(() => {\n    if(!socket) return;\n\n    socket.on('createComment', (data: IComment) => {\n      dispatch({ type: CREATE_COMMENT, payload: data })\n    })\n\n    return () => { socket.off('createComment') }\n\n  },[socket, dispatch])\n\n  // Reply Comment\n  useEffect(() => {\n    if(!socket) return;\n\n    socket.on('replyComment', (data: IComment) => {\n      dispatch({ type: REPLY_COMMENT, payload: data })\n    })\n\n    return () => { socket.off('replyComment') }\n\n  },[socket, dispatch])\n\n  // Update Comment\n  useEffect(() => {\n    if(!socket) return;\n\n    socket.on('updateComment', (data: IComment) => {\n      dispatch({ \n        type: data.comment_root ? UPDATE_REPLY : UPDATE_COMMENT, \n        payload: data \n      })\n    })\n\n    return () => { socket.off('updateComment') }\n  },[socket, dispatch])\n\n\n  // Delete Comment\n  useEffect(() => {\n    if(!socket) return;\n\n    socket.on('deleteComment', (data: IComment) => {\n      dispatch({ \n        type: data.comment_root ? DELETE_REPLY : DELETE_COMMENT, \n        payload: data \n      })\n    })\n\n    return () => { socket.off('deleteComment') }\n  },[socket, dispatch])\n\n\n  return (\n    <div>\n      \n    </div>\n  )\n}\n\nexport default SocketClient\n"]},"metadata":{},"sourceType":"module"}