{"ast":null,"code":"import * as types from '../types/categoryType';\n\nconst categoryReducer = (state = [], action) => {\n  switch (action.type) {\n    case types.CREATE_CATEGORY:\n      return [action.payload, ...state];\n\n    case types.GET_CATEGORIES:\n      return action.payload;\n\n    case types.UPDATE_CATEGORY:\n      return state.map(item => item._id === action.payload._id ? { ...item,\n        name: action.payload.name\n      } : item);\n\n    case types.DELETE_CATEGORY:\n      return state.filter(item => item._id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default categoryReducer;","map":{"version":3,"sources":["C:/Users/nguye/Desktop/client/src/redux/reducers/categoryReducer.ts"],"names":["types","categoryReducer","state","action","type","CREATE_CATEGORY","payload","GET_CATEGORIES","UPDATE_CATEGORY","map","item","_id","name","DELETE_CATEGORY","filter"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,uBAAvB;;AAGA,MAAMC,eAAe,GAAG,CACtBC,KAAkB,GAAG,EADC,EACGC,MADH,KAEN;AAChB,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,KAAK,CAACK,eAAX;AACE,aAAO,CAACF,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAApB,CAAP;;AAEF,SAAKF,KAAK,CAACO,cAAX;AACE,aAAOJ,MAAM,CAACG,OAAd;;AAEF,SAAKN,KAAK,CAACQ,eAAX;AACE,aAAON,KAAK,CAACO,GAAN,CAAUC,IAAI,IACnBA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACG,OAAP,CAAeK,GAA5B,GACE,EAAE,GAAGD,IAAL;AAAWE,QAAAA,IAAI,EAAET,MAAM,CAACG,OAAP,CAAeM;AAAhC,OADF,GAEEF,IAHG,CAAP;;AAMF,SAAKV,KAAK,CAACa,eAAX;AACE,aAAOX,KAAK,CAACY,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACG,OAAzC,CAAP;;AAEF;AACE,aAAOJ,KAAP;AAlBJ;AAoBD,CAvBD;;AAyBA,eAAeD,eAAf","sourcesContent":["import * as types from '../types/categoryType'\nimport { ICategory } from '../../utils/TypeScript'\n\nconst categoryReducer = (\n  state: ICategory[] = [], action: types.ICategoryType\n): ICategory[] => {\n  switch (action.type) {\n    case types.CREATE_CATEGORY:\n      return [action.payload, ...state]\n\n    case types.GET_CATEGORIES:\n      return action.payload\n\n    case types.UPDATE_CATEGORY:\n      return state.map(item => (\n        item._id === action.payload._id\n        ? { ...item, name: action.payload.name}\n        : item\n      ))\n\n    case types.DELETE_CATEGORY:\n      return state.filter(item => item._id !== action.payload)\n      \n    default:\n      return state;\n  }\n}\n\nexport default categoryReducer;"]},"metadata":{},"sourceType":"module"}