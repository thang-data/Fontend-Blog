{"ast":null,"code":"import { GET_OTHER_INFO } from '../types/profileType';\n\nconst otherInfoReducer = (state = [], action) => {\n  switch (action.type) {\n    case GET_OTHER_INFO:\n      return [...state, action.payload];\n\n    default:\n      return state;\n  }\n};\n\nexport default otherInfoReducer;","map":{"version":3,"sources":["C:/Users/nguye/Desktop/client/src/redux/reducers/otherInfoReducer.ts"],"names":["GET_OTHER_INFO","otherInfoReducer","state","action","type","payload"],"mappings":"AACA,SACEA,cADF,QAGO,sBAHP;;AAMA,MAAMC,gBAAgB,GAAG,CACvBC,KAAc,GAAG,EADM,EAEvBC,MAFuB,KAGX;AACZ,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKJ,cAAL;AACE,aAAO,CAAC,GAAGE,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AAEF;AACE,aAAOH,KAAP;AALJ;AAOD,CAXD;;AAaA,eAAeD,gBAAf","sourcesContent":["import { IUser } from '../../utils/TypeScript'\nimport {\n  GET_OTHER_INFO,\n  IGetOtherInfoType\n} from '../types/profileType'\n\n\nconst otherInfoReducer = (\n  state: IUser[] = [],\n  action: IGetOtherInfoType\n): IUser[] => {\n  switch(action.type){\n    case GET_OTHER_INFO:\n      return [...state, action.payload]\n\n    default:\n      return state\n  }\n}\n\nexport default otherInfoReducer"]},"metadata":{},"sourceType":"module"}