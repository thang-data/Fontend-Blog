{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Desktop\\\\client\\\\src\\\\components\\\\alert\\\\Toast.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux';\nimport { ALERT } from '../../redux/types/alertType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Toast = ({\n  title,\n  body,\n  bgColor\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    dispatch({\n      type: ALERT,\n      payload: {}\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `toast show position-fixed text-light ${bgColor}`,\n    style: {\n      top: '5px',\n      right: '5px',\n      zIndex: 50,\n      minWidth: '200px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `toast-header text-light ${bgColor}`,\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        className: \"me-auto\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn-close\",\n        \"data-bs-dismiss\": \"toast\",\n        \"aria-label\": \"Close\",\n        onClick: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-body\",\n      children: typeof body === 'string' ? body : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: body.map((text, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Toast, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Toast;\nexport default Toast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"sources":["C:/Users/nguye/Desktop/client/src/components/alert/Toast.tsx"],"names":["useDispatch","ALERT","Toast","title","body","bgColor","dispatch","handleClose","type","payload","top","right","zIndex","minWidth","map","text","index"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,6BAAtB;;;AAQA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAAoC;AAAA;;AAEhD,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEP,KAAR;AAAeQ,MAAAA,OAAO,EAAE;AAAxB,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAG,wCAAuCJ,OAAQ,EAAhE;AACA,IAAA,KAAK,EAAE;AAACK,MAAAA,GAAG,EAAE,KAAN;AAAaC,MAAAA,KAAK,EAAE,KAApB;AAA2BC,MAAAA,MAAM,EAAE,EAAnC;AAAuCC,MAAAA,QAAQ,EAAE;AAAjD,KADP;AAAA,4BAGE;AAAK,MAAA,SAAS,EAAG,2BAA0BR,OAAQ,EAAnD;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAAA,kBAA6BF;AAA7B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,WAAhC;AACA,2BAAgB,OADhB;AACwB,sBAAW,OADnC;AAEA,QAAA,OAAO,EAAEI;AAFT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAUE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAEI,OAAOH,IAAP,KAAiB,QAAjB,GACEA,IADF,gBAEE;AAAA,kBAEEA,IAAI,CAACU,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACP;AAAA,oBAAiBD;AAAjB,WAASC,KAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAFF;AAAA;AAAA;AAAA;AAAA;AAJN;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAnCD;;GAAMd,K;UAEaF,W;;;KAFbE,K;AAqCN,eAAeA,KAAf","sourcesContent":["import { useDispatch } from 'react-redux'\nimport { ALERT } from '../../redux/types/alertType'\n\ninterface IProps {\n  title: string\n  body: string | string[]\n  bgColor: string\n}\n\nconst Toast = ({title, body, bgColor}: IProps) => {\n\n  const dispatch = useDispatch()\n\n  const handleClose = () => {\n    dispatch({ type: ALERT, payload: {} })\n  }\n\n  return (\n    <div className={`toast show position-fixed text-light ${bgColor}`}\n    style={{top: '5px', right: '5px', zIndex: 50, minWidth: '200px'}}>\n\n      <div className={`toast-header text-light ${bgColor}`}>\n        <strong className=\"me-auto\">{title}</strong>\n        <button type=\"button\" className=\"btn-close\" \n        data-bs-dismiss=\"toast\" aria-label=\"Close\"\n        onClick={handleClose} />\n      </div>\n\n      <div className=\"toast-body\">\n        {\n          typeof(body) === 'string'\n          ? body\n          : <ul>\n            {\n              body.map((text, index) => (\n                <li key={index}>{text}</li>\n              ))\n            }\n          </ul>\n        }\n      </div>\n\n    </div>\n  )\n}\n\nexport default Toast\n"]},"metadata":{},"sourceType":"module"}