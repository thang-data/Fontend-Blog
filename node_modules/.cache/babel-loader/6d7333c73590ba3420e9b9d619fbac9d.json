{"ast":null,"code":"import{useDispatch}from'react-redux';import{ALERT}from'../../redux/types/alertType';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Toast=function Toast(_ref){var title=_ref.title,body=_ref.body,bgColor=_ref.bgColor;var dispatch=useDispatch();var handleClose=function handleClose(){dispatch({type:ALERT,payload:{}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"toast show position-fixed text-light \".concat(bgColor),style:{top:'5px',right:'5px',zIndex:50,minWidth:'200px'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"toast-header text-light \".concat(bgColor),children:[/*#__PURE__*/_jsx(\"strong\",{className:\"me-auto\",children:title}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn-close\",\"data-bs-dismiss\":\"toast\",\"aria-label\":\"Close\",onClick:handleClose})]}),/*#__PURE__*/_jsx(\"div\",{className:\"toast-body\",children:typeof body==='string'?body:/*#__PURE__*/_jsx(\"ul\",{children:body.map(function(text,index){return/*#__PURE__*/_jsx(\"li\",{children:text},index);})})})]});};export default Toast;","map":{"version":3,"sources":["C:/Users/nguye/Desktop/client/src/components/alert/Toast.tsx"],"names":["useDispatch","ALERT","Toast","title","body","bgColor","dispatch","handleClose","type","payload","top","right","zIndex","minWidth","map","text","index"],"mappings":"AAAA,OAASA,WAAT,KAA4B,aAA5B,CACA,OAASC,KAAT,KAAsB,6BAAtB,C,wFAQA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAoC,IAAlCC,CAAAA,KAAkC,MAAlCA,KAAkC,CAA3BC,IAA2B,MAA3BA,IAA2B,CAArBC,OAAqB,MAArBA,OAAqB,CAEhD,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CAEA,GAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBD,QAAQ,CAAC,CAAEE,IAAI,CAAEP,KAAR,CAAeQ,OAAO,CAAE,EAAxB,CAAD,CAAR,CACD,CAFD,CAIA,mBACE,aAAK,SAAS,gDAA0CJ,OAA1C,CAAd,CACA,KAAK,CAAE,CAACK,GAAG,CAAE,KAAN,CAAaC,KAAK,CAAE,KAApB,CAA2BC,MAAM,CAAE,EAAnC,CAAuCC,QAAQ,CAAE,OAAjD,CADP,wBAGE,aAAK,SAAS,mCAA6BR,OAA7B,CAAd,wBACE,eAAQ,SAAS,CAAC,SAAlB,UAA6BF,KAA7B,EADF,cAEE,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,WAAhC,CACA,kBAAgB,OADhB,CACwB,aAAW,OADnC,CAEA,OAAO,CAAEI,WAFT,EAFF,GAHF,cAUE,YAAK,SAAS,CAAC,YAAf,UAEI,MAAOH,CAAAA,IAAP,GAAiB,QAAjB,CACEA,IADF,cAEE,oBAEEA,IAAI,CAACU,GAAL,CAAS,SAACC,IAAD,CAAOC,KAAP,qBACP,oBAAiBD,IAAjB,EAASC,KAAT,CADO,EAAT,CAFF,EAJN,EAVF,GADF,CA2BD,CAnCD,CAqCA,cAAed,CAAAA,KAAf","sourcesContent":["import { useDispatch } from 'react-redux'\nimport { ALERT } from '../../redux/types/alertType'\n\ninterface IProps {\n  title: string\n  body: string | string[]\n  bgColor: string\n}\n\nconst Toast = ({title, body, bgColor}: IProps) => {\n\n  const dispatch = useDispatch()\n\n  const handleClose = () => {\n    dispatch({ type: ALERT, payload: {} })\n  }\n\n  return (\n    <div className={`toast show position-fixed text-light ${bgColor}`}\n    style={{top: '5px', right: '5px', zIndex: 50, minWidth: '200px'}}>\n\n      <div className={`toast-header text-light ${bgColor}`}>\n        <strong className=\"me-auto\">{title}</strong>\n        <button type=\"button\" className=\"btn-close\" \n        data-bs-dismiss=\"toast\" aria-label=\"Close\"\n        onClick={handleClose} />\n      </div>\n\n      <div className=\"toast-body\">\n        {\n          typeof(body) === 'string'\n          ? body\n          : <ul>\n            {\n              body.map((text, index) => (\n                <li key={index}>{text}</li>\n              ))\n            }\n          </ul>\n        }\n      </div>\n\n    </div>\n  )\n}\n\nexport default Toast\n"]},"metadata":{},"sourceType":"module"}