{"ast":null,"code":"import _objectSpread from\"C:/Users/nguye/Desktop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:/Users/nguye/Desktop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import*as types from'../types/categoryType';var categoryReducer=function categoryReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case types.CREATE_CATEGORY:return[action.payload].concat(_toConsumableArray(state));case types.GET_CATEGORIES:return action.payload;case types.UPDATE_CATEGORY:return state.map(function(item){return item._id===action.payload._id?_objectSpread(_objectSpread({},item),{},{name:action.payload.name}):item;});case types.DELETE_CATEGORY:return state.filter(function(item){return item._id!==action.payload;});default:return state;}};export default categoryReducer;","map":{"version":3,"sources":["C:/Users/nguye/Desktop/client/src/redux/reducers/categoryReducer.ts"],"names":["types","categoryReducer","state","action","type","CREATE_CATEGORY","payload","GET_CATEGORIES","UPDATE_CATEGORY","map","item","_id","name","DELETE_CATEGORY","filter"],"mappings":"+SAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,uBAAvB,CAGA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAEN,IADhBC,CAAAA,KACgB,2DADK,EACL,IADSC,CAAAA,MACT,2CAChB,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKJ,CAAAA,KAAK,CAACK,eAAX,CACE,OAAQF,MAAM,CAACG,OAAf,4BAA2BJ,KAA3B,GAEF,IAAKF,CAAAA,KAAK,CAACO,cAAX,CACE,MAAOJ,CAAAA,MAAM,CAACG,OAAd,CAEF,IAAKN,CAAAA,KAAK,CAACQ,eAAX,CACE,MAAON,CAAAA,KAAK,CAACO,GAAN,CAAU,SAAAC,IAAI,QACnBA,CAAAA,IAAI,CAACC,GAAL,GAAaR,MAAM,CAACG,OAAP,CAAeK,GAA5B,gCACOD,IADP,MACaE,IAAI,CAAET,MAAM,CAACG,OAAP,CAAeM,IADlC,GAEEF,IAHiB,EAAd,CAAP,CAMF,IAAKV,CAAAA,KAAK,CAACa,eAAX,CACE,MAAOX,CAAAA,KAAK,CAACY,MAAN,CAAa,SAAAJ,IAAI,QAAIA,CAAAA,IAAI,CAACC,GAAL,GAAaR,MAAM,CAACG,OAAxB,EAAjB,CAAP,CAEF,QACE,MAAOJ,CAAAA,KAAP,CAlBJ,CAoBD,CAvBD,CAyBA,cAAeD,CAAAA,eAAf","sourcesContent":["import * as types from '../types/categoryType'\nimport { ICategory } from '../../utils/TypeScript'\n\nconst categoryReducer = (\n  state: ICategory[] = [], action: types.ICategoryType\n): ICategory[] => {\n  switch (action.type) {\n    case types.CREATE_CATEGORY:\n      return [action.payload, ...state]\n\n    case types.GET_CATEGORIES:\n      return action.payload\n\n    case types.UPDATE_CATEGORY:\n      return state.map(item => (\n        item._id === action.payload._id\n        ? { ...item, name: action.payload.name}\n        : item\n      ))\n\n    case types.DELETE_CATEGORY:\n      return state.filter(item => item._id !== action.payload)\n      \n    default:\n      return state;\n  }\n}\n\nexport default categoryReducer;"]},"metadata":{},"sourceType":"module"}