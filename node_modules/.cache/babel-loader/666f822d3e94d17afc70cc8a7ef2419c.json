{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Desktop\\\\client\\\\src\\\\components\\\\profile\\\\UserBlogs.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { getBlogsByUserId } from '../../redux/actions/blogAction';\nimport CardHoriz from '../cards/CardHoriz';\nimport Loading from '../global/Loading';\nimport Pagination from '../global/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserBlogs = () => {\n  _s();\n\n  const {\n    blogsUser\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const user_id = useParams().slug;\n  const [blogs, setBlogs] = useState();\n  const [total, setTotal] = useState(0);\n  const history = useHistory();\n  const {\n    search\n  } = history.location;\n  useEffect(() => {\n    if (!user_id) return;\n\n    if (blogsUser.every(item => item.id !== user_id)) {\n      dispatch(getBlogsByUserId(user_id, search));\n    } else {\n      const data = blogsUser.find(item => item.id === user_id);\n      if (!data) return;\n      setBlogs(data.blogs);\n      setTotal(data.total);\n      if (data.search) history.push(data.search);\n    }\n  }, [user_id, blogsUser, dispatch, search, history]);\n\n  const handlePagination = num => {\n    const search = `?page=${num}`;\n    dispatch(getBlogsByUserId(user_id, search));\n  };\n\n  if (!blogs) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 21\n  }, this);\n  if (blogs.length === 0 && total < 1) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"text-center\",\n    children: \"No Blogs\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: blogs.map(blog => /*#__PURE__*/_jsxDEV(CardHoriz, {\n        blog: blog\n      }, blog._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        total: total,\n        callback: handlePagination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserBlogs, \"V6AWP3JoLZ6ve8CtBx/iiB79Ilk=\", false, function () {\n  return [useSelector, useDispatch, useParams, useHistory];\n});\n\n_c = UserBlogs;\nexport default UserBlogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserBlogs\");","map":{"version":3,"sources":["C:/Users/nguye/Desktop/client/src/components/profile/UserBlogs.tsx"],"names":["React","useState","useEffect","useDispatch","useSelector","useParams","useHistory","getBlogsByUserId","CardHoriz","Loading","Pagination","UserBlogs","blogsUser","state","dispatch","user_id","slug","blogs","setBlogs","total","setTotal","history","search","location","every","item","id","data","find","push","handlePagination","num","length","map","blog","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AAIA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAgBR,WAAW,CAAES,KAAD,IAAsBA,KAAvB,CAAjC;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,OAAO,GAAGV,SAAS,GAAYW,IAArC;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,EAAlC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAMoB,OAAO,GAAGf,UAAU,EAA1B;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAaD,OAAO,CAACE,QAA3B;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACa,OAAJ,EAAa;;AAEb,QAAGH,SAAS,CAACY,KAAV,CAAgBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYX,OAApC,CAAH,EAAgD;AAC9CD,MAAAA,QAAQ,CAACP,gBAAgB,CAACQ,OAAD,EAAUO,MAAV,CAAjB,CAAR;AACD,KAFD,MAEK;AACH,YAAMK,IAAI,GAAGf,SAAS,CAACgB,IAAV,CAAeH,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYX,OAAnC,CAAb;AACA,UAAG,CAACY,IAAJ,EAAU;AAEVT,MAAAA,QAAQ,CAACS,IAAI,CAACV,KAAN,CAAR;AACAG,MAAAA,QAAQ,CAACO,IAAI,CAACR,KAAN,CAAR;AACA,UAAGQ,IAAI,CAACL,MAAR,EAAgBD,OAAO,CAACQ,IAAR,CAAaF,IAAI,CAACL,MAAlB;AACjB;AACF,GAbQ,EAaP,CAACP,OAAD,EAAUH,SAAV,EAAqBE,QAArB,EAA+BQ,MAA/B,EAAuCD,OAAvC,CAbO,CAAT;;AAeA,QAAMS,gBAAgB,GAAIC,GAAD,IAAiB;AACxC,UAAMT,MAAM,GAAI,SAAQS,GAAI,EAA5B;AACAjB,IAAAA,QAAQ,CAACP,gBAAgB,CAACQ,OAAD,EAAUO,MAAV,CAAjB,CAAR;AACD,GAHD;;AAMA,MAAG,CAACL,KAAJ,EAAW,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,MAAGA,KAAK,CAACe,MAAN,KAAiB,CAAjB,IAAsBb,KAAK,GAAG,CAAjC,EAAoC,oBAClC;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADkC;AAIpC,sBACE;AAAA,4BACE;AAAA,gBAEIF,KAAK,CAACgB,GAAN,CAAUC,IAAI,iBACZ,QAAC,SAAD;AAA0B,QAAA,IAAI,EAAEA;AAAhC,SAAgBA,IAAI,CAACC,GAArB;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA,6BACE,QAAC,UAAD;AACA,QAAA,KAAK,EAAEhB,KADP;AAEA,QAAA,QAAQ,EAAEW;AAFV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAxDD;;GAAMnB,S;UACkBP,W,EACLD,W,EACDE,S,EAKAC,U;;;KARZK,S;AA0DN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport { IParams, RootStore, IBlog } from '../../utils/TypeScript'\n\nimport { getBlogsByUserId } from '../../redux/actions/blogAction'\n\nimport CardHoriz from '../cards/CardHoriz'\nimport Loading from '../global/Loading'\nimport Pagination from '../global/Pagination'\n\nconst UserBlogs = () => {\n  const { blogsUser } = useSelector((state: RootStore) => state)\n  const dispatch = useDispatch()\n  const user_id = useParams<IParams>().slug\n\n  const [blogs, setBlogs] = useState<IBlog[]>()\n  const [total, setTotal] = useState(0)\n\n  const history = useHistory()\n  const { search } = history.location\n\n  useEffect(() => {\n    if(!user_id) return;\n\n    if(blogsUser.every(item => item.id !== user_id)){\n      dispatch(getBlogsByUserId(user_id, search))\n    }else{\n      const data = blogsUser.find(item => item.id === user_id)\n      if(!data) return;\n\n      setBlogs(data.blogs)\n      setTotal(data.total)\n      if(data.search) history.push(data.search)\n    }\n  },[user_id, blogsUser, dispatch, search, history])\n\n  const handlePagination = (num: number) => {\n    const search = `?page=${num}`\n    dispatch(getBlogsByUserId(user_id, search))\n  }\n\n\n  if(!blogs) return <Loading />;\n\n  if(blogs.length === 0 && total < 1) return(\n    <h3 className=\"text-center\">No Blogs</h3>\n  )\n\n  return (\n    <div>\n      <div>\n        {\n          blogs.map(blog => (\n            <CardHoriz key={blog._id} blog={blog} />\n          ))\n        }\n      </div>\n\n      <div>\n        <Pagination \n        total={total}\n        callback={handlePagination}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default UserBlogs\n"]},"metadata":{},"sourceType":"module"}