{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Desktop\\\\client\\\\src\\\\components\\\\comments\\\\Input.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport LiteQuill from '../editor/LiteQuill';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = ({\n  callback,\n  edit,\n  setEdit\n}) => {\n  _s();\n\n  const [body, setBody] = useState('');\n  const divRef = useRef(null);\n  useEffect(() => {\n    if (edit) setBody(edit.content);\n  }, [edit]);\n\n  const handleSubmit = () => {\n    const div = divRef.current;\n    const text = div === null || div === void 0 ? void 0 : div.innerText;\n\n    if (!text.trim()) {\n      if (setEdit) return setEdit(undefined);\n      return;\n    }\n\n    ;\n    callback(body);\n    setBody('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(LiteQuill, {\n      body: body,\n      setBody: setBody\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: divRef,\n      dangerouslySetInnerHTML: {\n        __html: body\n      },\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-dark ms-auto d-block px-4 mt-2\",\n      onClick: handleSubmit,\n      children: edit ? 'Update' : 'Send'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"IcULCAgoOU5Uj/Tl+3xrby5k+ao=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/nguye/Desktop/client/src/components/comments/Input.tsx"],"names":["React","useState","useRef","useEffect","LiteQuill","Input","callback","edit","setEdit","body","setBody","divRef","content","handleSubmit","div","current","text","innerText","trim","undefined","__html","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAOC,SAAP,MAAsB,qBAAtB;;;AASA,MAAMC,KAAuB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,CAAD,KAAiC;AAAA;;AAE/D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMU,MAAM,GAAGT,MAAM,CAAiB,IAAjB,CAArB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGI,IAAH,EAASG,OAAO,CAACH,IAAI,CAACK,OAAN,CAAP;AACV,GAFQ,EAEP,CAACL,IAAD,CAFO,CAAT;;AAKA,QAAMM,YAAY,GAAG,MAAM;AACzB,UAAMC,GAAG,GAAGH,MAAM,CAACI,OAAnB;AACA,UAAMC,IAAI,GAAIF,GAAJ,aAAIA,GAAJ,uBAAIA,GAAG,CAAEG,SAAnB;;AACA,QAAG,CAACD,IAAI,CAACE,IAAL,EAAJ,EAAiB;AACf,UAAGV,OAAH,EAAY,OAAOA,OAAO,CAACW,SAAD,CAAd;AACZ;AACD;;AAAA;AAEDb,IAAAA,QAAQ,CAACG,IAAD,CAAR;AAEAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAXD;;AAaA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,IAAI,EAAED,IAAjB;AAAuB,MAAA,OAAO,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,GAAG,EAAEC,MAAV;AAAkB,MAAA,uBAAuB,EAAE;AACzCS,QAAAA,MAAM,EAAEX;AADiC,OAA3C;AAEG,MAAA,KAAK,EAAE;AAACY,QAAAA,OAAO,EAAE;AAAV;AAFV;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE;AAAQ,MAAA,SAAS,EAAC,wCAAlB;AACA,MAAA,OAAO,EAAER,YADT;AAAA,gBAEIN,IAAI,GAAG,QAAH,GAAc;AAFtB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CArCD;;GAAMF,K;;KAAAA,K;AAuCN,eAAeA,KAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport { IComment } from '../../utils/TypeScript'\nimport LiteQuill from '../editor/LiteQuill'\n\n\ninterface IProps {\n  callback: (body: string) => void\n  edit?: IComment\n  setEdit?:(edit?: IComment) => void\n}\n\nconst Input: React.FC<IProps> = ({ callback, edit, setEdit }) => {\n\n  const [body, setBody] = useState('')\n  const divRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if(edit) setBody(edit.content)\n  },[edit])\n\n\n  const handleSubmit = () => {\n    const div = divRef.current;\n    const text = (div?.innerText as string)\n    if(!text.trim()) {\n      if(setEdit) return setEdit(undefined);\n      return;\n    };\n\n    callback(body)\n\n    setBody('')\n  }\n  \n  return (\n    <div>\n      <LiteQuill body={body} setBody={setBody} />\n\n      <div ref={divRef} dangerouslySetInnerHTML={{\n        __html: body\n      }} style={{display: 'none'}} />\n\n      <button className=\"btn btn-dark ms-auto d-block px-4 mt-2\"\n      onClick={handleSubmit}>\n        { edit ? 'Update' : 'Send' }\n      </button>\n    </div>\n  )\n}\n\nexport default Input\n"]},"metadata":{},"sourceType":"module"}