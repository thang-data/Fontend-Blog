{"ast":null,"code":"import _toConsumableArray from\"C:/Users/nguye/Desktop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Users/nguye/Desktop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{CREATE_COMMENT,GET_COMMENTS,REPLY_COMMENT,UPDATE_COMMENT,UPDATE_REPLY,DELETE_COMMENT,DELETE_REPLY}from'../types/commentType';var initialState={data:[],total:1};var commentReducer=function commentReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case CREATE_COMMENT:return _objectSpread(_objectSpread({},state),{},{data:[action.payload].concat(_toConsumableArray(state.data))});case GET_COMMENTS:return action.payload;case REPLY_COMMENT:return _objectSpread(_objectSpread({},state),{},{data:state.data.map(function(item){return item._id===action.payload.comment_root?_objectSpread(_objectSpread({},item),{},{replyCM:[action.payload].concat(_toConsumableArray(item.replyCM))}):item;})});case UPDATE_COMMENT:return _objectSpread(_objectSpread({},state),{},{data:state.data.map(function(item){return item._id===action.payload._id?action.payload:item;})});case UPDATE_REPLY:return _objectSpread(_objectSpread({},state),{},{data:state.data.map(function(item){var _item$replyCM;return item._id===action.payload.comment_root?_objectSpread(_objectSpread({},item),{},{replyCM:(_item$replyCM=item.replyCM)===null||_item$replyCM===void 0?void 0:_item$replyCM.map(function(rp){return rp._id===action.payload._id?action.payload:rp;})}):item;})});case DELETE_COMMENT:return _objectSpread(_objectSpread({},state),{},{data:state.data.filter(function(item){return item._id!==action.payload._id;})});case DELETE_REPLY:return _objectSpread(_objectSpread({},state),{},{data:state.data.map(function(item){var _item$replyCM2;return item._id===action.payload.comment_root?_objectSpread(_objectSpread({},item),{},{replyCM:(_item$replyCM2=item.replyCM)===null||_item$replyCM2===void 0?void 0:_item$replyCM2.filter(function(rp){return rp._id!==action.payload._id;})}):item;})});default:return state;}};export default commentReducer;","map":{"version":3,"sources":["C:/Users/nguye/Desktop/client/src/redux/reducers/commentReducer.ts"],"names":["CREATE_COMMENT","GET_COMMENTS","REPLY_COMMENT","UPDATE_COMMENT","UPDATE_REPLY","DELETE_COMMENT","DELETE_REPLY","initialState","data","total","commentReducer","state","action","type","payload","map","item","_id","comment_root","replyCM","rp","filter"],"mappings":"+SAAA,OAEEA,cAFF,CAGEC,YAHF,CAIEC,aAJF,CAKEC,cALF,CAMEC,YANF,CAOEC,cAPF,CAQEC,YARF,KAUO,sBAVP,CAYA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,IAAI,CAAE,EADa,CAEnBC,KAAK,CAAE,CAFY,CAArB,CAMA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAGH,IAFlBC,CAAAA,KAEkB,2DAFKJ,YAEL,IADlBK,CAAAA,MACkB,2CAClB,OAAOA,MAAM,CAACC,IAAd,EACE,IAAKb,CAAAA,cAAL,CACE,sCACKW,KADL,MAEEH,IAAI,EAAGI,MAAM,CAACE,OAAV,4BAAsBH,KAAK,CAACH,IAA5B,EAFN,GAKF,IAAKP,CAAAA,YAAL,CACE,MAAOW,CAAAA,MAAM,CAACE,OAAd,CAEF,IAAKZ,CAAAA,aAAL,CACE,sCACKS,KADL,MAEEH,IAAI,CAAEG,KAAK,CAACH,IAAN,CAAWO,GAAX,CAAe,SAAAC,IAAI,QACvBA,CAAAA,IAAI,CAACC,GAAL,GAAaL,MAAM,CAACE,OAAP,CAAeI,YAA5B,gCAEKF,IAFL,MAGEG,OAAO,EACLP,MAAM,CAACE,OADF,4BAEFE,IAAI,CAACG,OAFH,EAHT,GAQEH,IATqB,EAAnB,CAFR,GAeF,IAAKb,CAAAA,cAAL,CACE,sCACKQ,KADL,MAEEH,IAAI,CAAEG,KAAK,CAACH,IAAN,CAAWO,GAAX,CAAe,SAAAC,IAAI,QACvBA,CAAAA,IAAI,CAACC,GAAL,GAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,CACEL,MAAM,CAACE,OADT,CAEEE,IAHqB,EAAnB,CAFR,GASF,IAAKZ,CAAAA,YAAL,CACE,sCACKO,KADL,MAEEH,IAAI,CAAEG,KAAK,CAACH,IAAN,CAAWO,GAAX,CAAe,SAAAC,IAAI,0BACvBA,CAAAA,IAAI,CAACC,GAAL,GAAaL,MAAM,CAACE,OAAP,CAAeI,YAA5B,gCAEKF,IAFL,MAGEG,OAAO,gBAAEH,IAAI,CAACG,OAAP,wCAAE,cAAcJ,GAAd,CAAkB,SAAAK,EAAE,QAC3BA,CAAAA,EAAE,CAACH,GAAH,GAAWL,MAAM,CAACE,OAAP,CAAeG,GAA1B,CACEL,MAAM,CAACE,OADT,CAEEM,EAHyB,EAApB,CAHX,GASEJ,IAVqB,EAAnB,CAFR,GAgBF,IAAKX,CAAAA,cAAL,CACE,sCACKM,KADL,MAEEH,IAAI,CAAEG,KAAK,CAACH,IAAN,CAAWa,MAAX,CAAkB,SAAAL,IAAI,QAC1BA,CAAAA,IAAI,CAACC,GAAL,GAAaL,MAAM,CAACE,OAAP,CAAeG,GADF,EAAtB,CAFR,GAOF,IAAKX,CAAAA,YAAL,CACE,sCACKK,KADL,MAEEH,IAAI,CAAEG,KAAK,CAACH,IAAN,CAAWO,GAAX,CAAe,SAAAC,IAAI,2BACvBA,CAAAA,IAAI,CAACC,GAAL,GAAaL,MAAM,CAACE,OAAP,CAAeI,YAA5B,gCAEKF,IAFL,MAGEG,OAAO,iBAAEH,IAAI,CAACG,OAAP,yCAAE,eAAcE,MAAd,CAAqB,SAAAD,EAAE,QAC9BA,CAAAA,EAAE,CAACH,GAAH,GAAWL,MAAM,CAACE,OAAP,CAAeG,GADI,EAAvB,CAHX,GAOED,IARqB,EAAnB,CAFR,GAcF,QACE,MAAOL,CAAAA,KAAP,CA7EJ,CA+ED,CAnFD,CAsFA,cAAeD,CAAAA,cAAf","sourcesContent":["import {\n  ICommentState,\n  CREATE_COMMENT,\n  GET_COMMENTS,\n  REPLY_COMMENT,\n  UPDATE_COMMENT,\n  UPDATE_REPLY,\n  DELETE_COMMENT,\n  DELETE_REPLY,\n  ICommentType\n} from '../types/commentType'\n\nconst initialState = {\n  data: [],\n  total: 1\n}\n\n\nconst commentReducer = (\n  state: ICommentState = initialState,\n  action: ICommentType\n): ICommentState => {\n  switch(action.type){\n    case CREATE_COMMENT:\n      return{\n        ...state,\n        data: [action.payload, ...state.data]\n      }\n    \n    case GET_COMMENTS:\n      return action.payload\n\n    case REPLY_COMMENT:\n      return {\n        ...state,\n        data: state.data.map(item => (\n          item._id === action.payload.comment_root\n          ? {\n            ...item,\n            replyCM: [\n              action.payload,\n              ...item.replyCM\n            ]\n          }\n          : item\n        ))\n      }\n\n    case UPDATE_COMMENT:\n      return{\n        ...state,\n        data: state.data.map(item => (\n          item._id === action.payload._id\n          ? action.payload\n          : item\n        ))\n      }\n\n    case UPDATE_REPLY:\n      return{\n        ...state,\n        data: state.data.map(item => (\n          item._id === action.payload.comment_root\n          ? {\n            ...item,\n            replyCM: item.replyCM?.map(rp => (\n              rp._id === action.payload._id\n              ? action.payload\n              : rp\n            ))\n          }\n          : item\n        ))\n      }\n      \n    case DELETE_COMMENT:\n      return{\n        ...state,\n        data: state.data.filter(item => \n          item._id !== action.payload._id\n        )\n      }\n\n    case DELETE_REPLY:\n      return{\n        ...state,\n        data: state.data.map(item => (\n          item._id === action.payload.comment_root\n          ? {\n            ...item,\n            replyCM: item.replyCM?.filter(rp => (\n              rp._id !== action.payload._id\n            ))\n          }\n          : item\n        ))\n      }\n      \n    default:\n      return state\n  }\n}\n\n\nexport default commentReducer"]},"metadata":{},"sourceType":"module"}