{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nguye\\\\Desktop\\\\client\\\\src\\\\pages\\\\blogs\\\\[slug].tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getBlogsByCategoryId } from '../../redux/actions/blogAction';\nimport Loading from '../../components/global/Loading';\nimport Pagination from '../../components/global/Pagination';\nimport CardVert from '../../components/cards/CardVert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlogsByCategory = () => {\n  _s();\n\n  const {\n    categories,\n    blogsCategory\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const {\n    slug\n  } = useParams();\n  const [categoryId, setCategoryId] = useState('');\n  const [blogs, setBlogs] = useState();\n  const [total, setTotal] = useState(0);\n  const history = useHistory();\n  const {\n    search\n  } = history.location;\n  useEffect(() => {\n    const category = categories.find(item => item.name === slug);\n    if (category) setCategoryId(category._id);\n  }, [slug, categories]);\n  useEffect(() => {\n    if (!categoryId) return;\n\n    if (blogsCategory.every(item => item.id !== categoryId)) {\n      dispatch(getBlogsByCategoryId(categoryId, search));\n    } else {\n      const data = blogsCategory.find(item => item.id === categoryId);\n      if (!data) return;\n      setBlogs(data.blogs);\n      setTotal(data.total);\n      if (data.search) history.push(data.search);\n    }\n  }, [categoryId, blogsCategory, dispatch, search, history]);\n\n  const handlePagination = num => {\n    const search = `?page=${num}`;\n    dispatch(getBlogsByCategoryId(categoryId, search));\n  };\n\n  if (!blogs) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blogs_category\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show_blogs\",\n      children: blogs.map(blog => /*#__PURE__*/_jsxDEV(CardVert, {\n        blog: blog\n      }, blog._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), total > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n      total: total,\n      callback: handlePagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlogsByCategory, \"zCqm/67uGvyIQ/NLOkx/OKvDPDE=\", false, function () {\n  return [useSelector, useDispatch, useParams, useHistory];\n});\n\n_c = BlogsByCategory;\nexport default BlogsByCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogsByCategory\");","map":{"version":3,"sources":["C:/Users/nguye/Desktop/client/src/pages/blogs/[slug].tsx"],"names":["React","useState","useEffect","useParams","useHistory","useSelector","useDispatch","getBlogsByCategoryId","Loading","Pagination","CardVert","BlogsByCategory","categories","blogsCategory","state","dispatch","slug","categoryId","setCategoryId","blogs","setBlogs","total","setTotal","history","search","location","category","find","item","name","_id","every","id","data","push","handlePagination","num","map","blog"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { getBlogsByCategoryId } from '../../redux/actions/blogAction'\n\nimport { RootStore, IParams, IBlog } from '../../utils/TypeScript'\n\nimport Loading from '../../components/global/Loading'\nimport Pagination from '../../components/global/Pagination'\nimport CardVert from '../../components/cards/CardVert'\n\n\nconst BlogsByCategory = () => {\n  const { categories, blogsCategory } = useSelector((state: RootStore) => state)\n  const dispatch = useDispatch()\n  const { slug } = useParams<IParams>()\n\n  const [categoryId, setCategoryId] = useState('')\n  const [blogs, setBlogs] = useState<IBlog[]>()\n  const [total, setTotal] = useState(0)\n\n  const history = useHistory()\n  const { search } = history.location;\n\n  useEffect(() => {\n    const category = categories.find(item => item.name === slug)\n    if(category) setCategoryId(category._id)\n  },[slug, categories])\n\n\n  useEffect(() => {\n    if(!categoryId) return;\n\n    if(blogsCategory.every(item => item.id !== categoryId)){\n      dispatch(getBlogsByCategoryId(categoryId, search))\n    }else{\n      const data = blogsCategory.find(item => item.id === categoryId)\n      if(!data) return;\n      setBlogs(data.blogs)\n      setTotal(data.total)\n\n      if(data.search) history.push(data.search)\n    }\n  },[categoryId, blogsCategory, dispatch, search, history])\n  \n\n  const handlePagination = (num: number) => {\n    const search = `?page=${num}`\n    dispatch(getBlogsByCategoryId(categoryId, search))\n  }\n\n\n  if(!blogs) return <Loading />;\n  return (\n    <div className=\"blogs_category\">\n      <div className=\"show_blogs\">\n        {\n          blogs.map(blog => (\n            <CardVert key={blog._id} blog={blog} />\n          ))\n        }\n      </div>\n      \n      {\n        total > 1 &&\n        <Pagination \n        total={total}\n        callback={handlePagination}\n        />\n      }\n     \n    </div>\n  )\n}\n\nexport default BlogsByCategory\n"]},"metadata":{},"sourceType":"module"}