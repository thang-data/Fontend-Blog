{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/nguye/Desktop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"C:/Users/nguye/Desktop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:/Users/nguye/Desktop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{imageUpload}from'../../utils/ImageUpload';import{postAPI,getAPI,putAPI,deleteAPI}from'../../utils/FetchData';import{ALERT}from'../types/alertType';import{GET_HOME_BLOGS,GET_BLOGS_CATEGORY_ID,GET_BLOGS_USER_ID,CREATE_BLOGS_USER_ID,DELETE_BLOGS_USER_ID}from'../types/blogType';import{checkTokenExp}from'../../utils/checkTokenExp';export var createBlog=function createBlog(blog,token){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var result,access_token,url,photo,newBlog,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return checkTokenExp(token,dispatch);case 2:result=_context.sent;access_token=result?result:token;_context.prev=4;dispatch({type:ALERT,payload:{loading:true}});if(!(typeof blog.thumbnail!=='string')){_context.next=13;break;}_context.next=9;return imageUpload(blog.thumbnail);case 9:photo=_context.sent;url=photo.url;_context.next=14;break;case 13:url=blog.thumbnail;case 14:newBlog=_objectSpread(_objectSpread({},blog),{},{thumbnail:url});_context.next=17;return postAPI('blog',newBlog,access_token);case 17:res=_context.sent;dispatch({type:CREATE_BLOGS_USER_ID,payload:res.data});dispatch({type:ALERT,payload:{loading:false}});_context.next=25;break;case 22:_context.prev=22;_context.t0=_context[\"catch\"](4);dispatch({type:ALERT,payload:{errors:_context.t0.response.data.msg}});case 25:case\"end\":return _context.stop();}}},_callee,null,[[4,22]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var getHomeBlogs=function getHomeBlogs(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:ALERT,payload:{loading:true}});_context2.next=4;return getAPI('home/blogs');case 4:res=_context2.sent;dispatch({type:GET_HOME_BLOGS,payload:res.data});dispatch({type:ALERT,payload:{loading:false}});_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);dispatch({type:ALERT,payload:{errors:_context2.t0.response.data.msg}});case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var getBlogsByCategoryId=function getBlogsByCategoryId(id,search){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var limit,value,res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;limit=8;value=search?search:\"?page=\".concat(1);dispatch({type:ALERT,payload:{loading:true}});_context3.next=6;return getAPI(\"blogs/category/\".concat(id).concat(value,\"&limit=\").concat(limit));case 6:res=_context3.sent;dispatch({type:GET_BLOGS_CATEGORY_ID,payload:_objectSpread(_objectSpread({},res.data),{},{id:id,search:search})});dispatch({type:ALERT,payload:{loading:false}});_context3.next=14;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](0);dispatch({type:ALERT,payload:{errors:_context3.t0.response.data.msg}});case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[0,11]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var getBlogsByUserId=function getBlogsByUserId(id,search){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var limit,value,res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;limit=3;value=search?search:\"?page=\".concat(1);dispatch({type:ALERT,payload:{loading:true}});_context4.next=6;return getAPI(\"blogs/user/\".concat(id).concat(value,\"&limit=\").concat(limit));case 6:res=_context4.sent;dispatch({type:GET_BLOGS_USER_ID,payload:_objectSpread(_objectSpread({},res.data),{},{id:id,search:search})});dispatch({type:ALERT,payload:{loading:false}});_context4.next=14;break;case 11:_context4.prev=11;_context4.t0=_context4[\"catch\"](0);dispatch({type:ALERT,payload:{errors:_context4.t0.response.data.msg}});case 14:case\"end\":return _context4.stop();}}},_callee4,null,[[0,11]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var updateBlog=function updateBlog(blog,token){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var result,access_token,url,photo,newBlog,res;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return checkTokenExp(token,dispatch);case 2:result=_context5.sent;access_token=result?result:token;_context5.prev=4;dispatch({type:ALERT,payload:{loading:true}});if(!(typeof blog.thumbnail!=='string')){_context5.next=13;break;}_context5.next=9;return imageUpload(blog.thumbnail);case 9:photo=_context5.sent;url=photo.url;_context5.next=14;break;case 13:url=blog.thumbnail;case 14:newBlog=_objectSpread(_objectSpread({},blog),{},{thumbnail:url});_context5.next=17;return putAPI(\"blog/\".concat(newBlog._id),newBlog,access_token);case 17:res=_context5.sent;dispatch({type:ALERT,payload:{success:res.data.msg}});_context5.next=24;break;case 21:_context5.prev=21;_context5.t0=_context5[\"catch\"](4);dispatch({type:ALERT,payload:{errors:_context5.t0.response.data.msg}});case 24:case\"end\":return _context5.stop();}}},_callee5,null,[[4,21]]);}));return function(_x5){return _ref5.apply(this,arguments);};}();};export var deleteBlog=function deleteBlog(blog,token){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){var result,access_token;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return checkTokenExp(token,dispatch);case 2:result=_context6.sent;access_token=result?result:token;_context6.prev=4;dispatch({type:DELETE_BLOGS_USER_ID,payload:blog});_context6.next=8;return deleteAPI(\"blog/\".concat(blog._id),access_token);case 8:_context6.next=13;break;case 10:_context6.prev=10;_context6.t0=_context6[\"catch\"](4);dispatch({type:ALERT,payload:{errors:_context6.t0.response.data.msg}});case 13:case\"end\":return _context6.stop();}}},_callee6,null,[[4,10]]);}));return function(_x6){return _ref6.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Users/nguye/Desktop/client/src/redux/actions/blogAction.ts"],"names":["imageUpload","postAPI","getAPI","putAPI","deleteAPI","ALERT","GET_HOME_BLOGS","GET_BLOGS_CATEGORY_ID","GET_BLOGS_USER_ID","CREATE_BLOGS_USER_ID","DELETE_BLOGS_USER_ID","checkTokenExp","createBlog","blog","token","dispatch","result","access_token","type","payload","loading","thumbnail","photo","url","newBlog","res","data","errors","response","msg","getHomeBlogs","getBlogsByCategoryId","id","search","limit","value","getBlogsByUserId","updateBlog","_id","success","deleteBlog"],"mappings":"wbAEA,OAASA,WAAT,KAA4B,yBAA5B,CACA,OAASC,OAAT,CAAkBC,MAAlB,CAA0BC,MAA1B,CAAkCC,SAAlC,KAAmD,uBAAnD,CAEA,OAASC,KAAT,KAAkC,oBAAlC,CAEA,OACEC,cADF,CAGEC,qBAHF,CAKEC,iBALF,CAOEC,oBAPF,CASEC,oBATF,KAWO,mBAXP,CAaA,OAASC,aAAT,KAA8B,2BAA9B,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAcC,KAAd,iGAC1B,iBAAOC,QAAP,sLACuBJ,CAAAA,aAAa,CAACG,KAAD,CAAQC,QAAR,CADpC,QACQC,MADR,eAEQC,YAFR,CAEuBD,MAAM,CAAGA,MAAH,CAAYF,KAFzC,iBAMIC,QAAQ,CAAC,CAAEG,IAAI,CAAEb,KAAR,CAAec,OAAO,CAAE,CAAEC,OAAO,CAAE,IAAX,CAAxB,CAAD,CAAR,CANJ,KAQO,MAAOP,CAAAA,IAAI,CAACQ,SAAZ,GAA2B,QARlC,iDAS0BrB,CAAAA,WAAW,CAACa,IAAI,CAACQ,SAAN,CATrC,QASYC,KATZ,eAUMC,GAAG,CAAGD,KAAK,CAACC,GAAZ,CAVN,+BAYMA,GAAG,CAAGV,IAAI,CAACQ,SAAX,CAZN,QAeUG,OAfV,gCAewBX,IAfxB,MAe8BQ,SAAS,CAAEE,GAfzC,0BAiBsBtB,CAAAA,OAAO,CAAC,MAAD,CAASuB,OAAT,CAAkBP,YAAlB,CAjB7B,SAiBUQ,GAjBV,eAmBIV,QAAQ,CAAC,CACPG,IAAI,CAAET,oBADC,CAEPU,OAAO,CAAEM,GAAG,CAACC,IAFN,CAAD,CAAR,CAKAX,QAAQ,CAAC,CAAEG,IAAI,CAAEb,KAAR,CAAec,OAAO,CAAE,CAAEC,OAAO,CAAE,KAAX,CAAxB,CAAD,CAAR,CAxBJ,iFA0BIL,QAAQ,CAAC,CAAEG,IAAI,CAAEb,KAAR,CAAec,OAAO,CAAE,CAACQ,MAAM,CAAE,YAAIC,QAAJ,CAAaF,IAAb,CAAkBG,GAA3B,CAAxB,CAAD,CAAR,CA1BJ,qEAD0B,gEAAnB,CAgCP,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,mGAC5B,kBAAOf,QAAP,+IAEIA,QAAQ,CAAC,CAAEG,IAAI,CAAEb,KAAR,CAAec,OAAO,CAAE,CAAEC,OAAO,CAAE,IAAX,CAAxB,CAAD,CAAR,CAFJ,uBAIsBlB,CAAAA,MAAM,CAAC,YAAD,CAJ5B,QAIUuB,GAJV,gBAMIV,QAAQ,CAAC,CACPG,IAAI,CAAEZ,cADC,CAEPa,OAAO,CAAEM,GAAG,CAACC,IAFN,CAAD,CAAR,CAKAX,QAAQ,CAAC,CAAEG,IAAI,CAAEb,KAAR,CAAec,OAAO,CAAE,CAAEC,OAAO,CAAE,KAAX,CAAxB,CAAD,CAAR,CAXJ,mFAaIL,QAAQ,CAAC,CAAEG,IAAI,CAAEb,KAAR,CAAec,OAAO,CAAE,CAACQ,MAAM,CAAE,aAAIC,QAAJ,CAAaF,IAAb,CAAkBG,GAA3B,CAAxB,CAAD,CAAR,CAbJ,sEAD4B,kEAArB,CAmBP,MAAO,IAAME,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,EAAD,CAAaC,MAAb,kGACpC,kBAAOlB,QAAP,2JAEQmB,KAFR,CAEgB,CAFhB,CAGQC,KAHR,CAGgBF,MAAM,CAAGA,MAAH,iBAAqB,CAArB,CAHtB,CAKIlB,QAAQ,CAAC,CAAEG,IAAI,CAAEb,KAAR,CAAec,OAAO,CAAE,CAAEC,OAAO,CAAE,IAAX,CAAxB,CAAD,CAAR,CALJ,uBAOsBlB,CAAAA,MAAM,0BAAmB8B,EAAnB,SAAwBG,KAAxB,mBAAuCD,KAAvC,EAP5B,QAOUT,GAPV,gBASIV,QAAQ,CAAC,CACPG,IAAI,CAAEX,qBADC,CAEPY,OAAO,gCAAMM,GAAG,CAACC,IAAV,MAAgBM,EAAE,CAAFA,EAAhB,CAAoBC,MAAM,CAANA,MAApB,EAFA,CAAD,CAAR,CAKAlB,QAAQ,CAAC,CAAEG,IAAI,CAAEb,KAAR,CAAec,OAAO,CAAE,CAAEC,OAAO,CAAE,KAAX,CAAxB,CAAD,CAAR,CAdJ,qFAgBIL,QAAQ,CAAC,CAAEG,IAAI,CAAEb,KAAR,CAAec,OAAO,CAAE,CAACQ,MAAM,CAAE,aAAIC,QAAJ,CAAaF,IAAb,CAAkBG,GAA3B,CAAxB,CAAD,CAAR,CAhBJ,uEADoC,kEAA7B,CAsBP,MAAO,IAAMO,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACJ,EAAD,CAAaC,MAAb,kGAChC,kBAAOlB,QAAP,2JAEQmB,KAFR,CAEgB,CAFhB,CAGQC,KAHR,CAGgBF,MAAM,CAAGA,MAAH,iBAAqB,CAArB,CAHtB,CAKIlB,QAAQ,CAAC,CAAEG,IAAI,CAAEb,KAAR,CAAec,OAAO,CAAE,CAAEC,OAAO,CAAE,IAAX,CAAxB,CAAD,CAAR,CALJ,uBAOsBlB,CAAAA,MAAM,sBAAe8B,EAAf,SAAoBG,KAApB,mBAAmCD,KAAnC,EAP5B,QAOUT,GAPV,gBASIV,QAAQ,CAAC,CACPG,IAAI,CAAEV,iBADC,CAEPW,OAAO,gCAAMM,GAAG,CAACC,IAAV,MAAgBM,EAAE,CAAFA,EAAhB,CAAoBC,MAAM,CAANA,MAApB,EAFA,CAAD,CAAR,CAKAlB,QAAQ,CAAC,CAAEG,IAAI,CAAEb,KAAR,CAAec,OAAO,CAAE,CAAEC,OAAO,CAAE,KAAX,CAAxB,CAAD,CAAR,CAdJ,qFAgBIL,QAAQ,CAAC,CAAEG,IAAI,CAAEb,KAAR,CAAec,OAAO,CAAE,CAACQ,MAAM,CAAE,aAAIC,QAAJ,CAAaF,IAAb,CAAkBG,GAA3B,CAAxB,CAAD,CAAR,CAhBJ,uEADgC,kEAAzB,CAsBP,MAAO,IAAMQ,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACxB,IAAD,CAAcC,KAAd,kGAC1B,kBAAOC,QAAP,2LACuBJ,CAAAA,aAAa,CAACG,KAAD,CAAQC,QAAR,CADpC,QACQC,MADR,gBAEQC,YAFR,CAEuBD,MAAM,CAAGA,MAAH,CAAYF,KAFzC,kBAKIC,QAAQ,CAAC,CAAEG,IAAI,CAAEb,KAAR,CAAec,OAAO,CAAE,CAAEC,OAAO,CAAE,IAAX,CAAxB,CAAD,CAAR,CALJ,KAOO,MAAOP,CAAAA,IAAI,CAACQ,SAAZ,GAA2B,QAPlC,mDAQ0BrB,CAAAA,WAAW,CAACa,IAAI,CAACQ,SAAN,CARrC,QAQYC,KARZ,gBASMC,GAAG,CAAGD,KAAK,CAACC,GAAZ,CATN,gCAWMA,GAAG,CAAGV,IAAI,CAACQ,SAAX,CAXN,QAcUG,OAdV,gCAcwBX,IAdxB,MAc8BQ,SAAS,CAAEE,GAdzC,2BAgBsBpB,CAAAA,MAAM,gBAASqB,OAAO,CAACc,GAAjB,EAAwBd,OAAxB,CAAiCP,YAAjC,CAhB5B,SAgBUQ,GAhBV,gBAkBIV,QAAQ,CAAC,CAAEG,IAAI,CAAEb,KAAR,CAAec,OAAO,CAAE,CAAEoB,OAAO,CAAEd,GAAG,CAACC,IAAJ,CAASG,GAApB,CAAxB,CAAD,CAAR,CAlBJ,qFAoBId,QAAQ,CAAC,CAAEG,IAAI,CAAEb,KAAR,CAAec,OAAO,CAAE,CAACQ,MAAM,CAAE,aAAIC,QAAJ,CAAaF,IAAb,CAAkBG,GAA3B,CAAxB,CAAD,CAAR,CApBJ,uEAD0B,kEAAnB,CA0BP,MAAO,IAAMW,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAC3B,IAAD,CAAcC,KAAd,kGAC1B,kBAAOC,QAAP,qKACuBJ,CAAAA,aAAa,CAACG,KAAD,CAAQC,QAAR,CADpC,QACQC,MADR,gBAEQC,YAFR,CAEuBD,MAAM,CAAGA,MAAH,CAAYF,KAFzC,kBAIIC,QAAQ,CAAC,CACPG,IAAI,CAAER,oBADC,CAEPS,OAAO,CAAEN,IAFF,CAAD,CAAR,CAJJ,uBASUT,CAAAA,SAAS,gBAASS,IAAI,CAACyB,GAAd,EAAqBrB,YAArB,CATnB,6FAYIF,QAAQ,CAAC,CAAEG,IAAI,CAAEb,KAAR,CAAec,OAAO,CAAE,CAACQ,MAAM,CAAE,aAAIC,QAAJ,CAAaF,IAAb,CAAkBG,GAA3B,CAAxB,CAAD,CAAR,CAZJ,uEAD0B,kEAAnB","sourcesContent":["import { Dispatch } from 'redux'\nimport { IBlog } from '../../utils/TypeScript'\nimport { imageUpload } from '../../utils/ImageUpload'\nimport { postAPI, getAPI, putAPI, deleteAPI } from '../../utils/FetchData'\n\nimport { ALERT, IAlertType } from '../types/alertType'\n\nimport {\n  GET_HOME_BLOGS,\n  IGetHomeBlogsType,\n  GET_BLOGS_CATEGORY_ID,\n  IGetBlogsCategoryType,\n  GET_BLOGS_USER_ID,\n  IGetBlogsUserType,\n  CREATE_BLOGS_USER_ID,\n  ICreateBlogsUserType,\n  DELETE_BLOGS_USER_ID,\n  IDeleteBlogsUserType\n} from '../types/blogType'\n\nimport { checkTokenExp } from '../../utils/checkTokenExp'\n\nexport const createBlog = (blog: IBlog, token: string) => \nasync (dispatch: Dispatch<IAlertType | ICreateBlogsUserType>) => {\n  const result = await checkTokenExp(token, dispatch)\n  const access_token = result ? result : token\n\n  let url;\n  try {\n    dispatch({ type: ALERT, payload: { loading: true } })\n    \n    if(typeof(blog.thumbnail) !== 'string'){\n      const photo = await imageUpload(blog.thumbnail)\n      url = photo.url\n    }else{\n      url = blog.thumbnail\n    }\n    \n    const newBlog = {...blog, thumbnail: url}\n    \n    const res = await postAPI('blog', newBlog, access_token)\n\n    dispatch({\n      type: CREATE_BLOGS_USER_ID,\n      payload: res.data\n    })\n\n    dispatch({ type: ALERT, payload: { loading: false } })\n  } catch (err: any) {\n    dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\n  }\n}\n\n\nexport const getHomeBlogs = () => \nasync (dispatch: Dispatch<IAlertType | IGetHomeBlogsType>) => {\n  try {\n    dispatch({ type: ALERT, payload: { loading: true } })\n\n    const res = await getAPI('home/blogs')\n\n    dispatch({\n      type: GET_HOME_BLOGS,\n      payload: res.data\n    })\n    \n    dispatch({ type: ALERT, payload: { loading: false } })\n  } catch (err: any) {\n    dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\n  }\n}\n\n\nexport const getBlogsByCategoryId = (id: string, search: string) => \nasync (dispatch: Dispatch<IAlertType | IGetBlogsCategoryType>) => {\n  try {\n    let limit = 8;\n    let value = search ? search : `?page=${1}`;\n\n    dispatch({ type: ALERT, payload: { loading: true } })\n\n    const res = await getAPI(`blogs/category/${id}${value}&limit=${limit}`)\n\n    dispatch({\n      type: GET_BLOGS_CATEGORY_ID,\n      payload: {...res.data, id, search }\n    })\n    \n    dispatch({ type: ALERT, payload: { loading: false } })\n  } catch (err: any) {\n    dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\n  }\n}\n\n\nexport const getBlogsByUserId = (id: string, search: string) => \nasync (dispatch: Dispatch<IAlertType | IGetBlogsUserType>) => {\n  try {\n    let limit = 3;\n    let value = search ? search : `?page=${1}`;\n\n    dispatch({ type: ALERT, payload: { loading: true } })\n\n    const res = await getAPI(`blogs/user/${id}${value}&limit=${limit}`)\n\n    dispatch({\n      type: GET_BLOGS_USER_ID,\n      payload: {...res.data, id, search }\n    })\n    \n    dispatch({ type: ALERT, payload: { loading: false } })\n  } catch (err: any) {\n    dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\n  }\n}\n\n\nexport const updateBlog = (blog: IBlog, token: string) => \nasync (dispatch: Dispatch<IAlertType>) => {\n  const result = await checkTokenExp(token, dispatch)\n  const access_token = result ? result : token\n  let url;\n  try {\n    dispatch({ type: ALERT, payload: { loading: true } })\n    \n    if(typeof(blog.thumbnail) !== 'string'){\n      const photo = await imageUpload(blog.thumbnail)\n      url = photo.url\n    }else{\n      url = blog.thumbnail\n    }\n    \n    const newBlog = {...blog, thumbnail: url}\n\n    const res = await putAPI(`blog/${newBlog._id}`, newBlog, access_token)\n\n    dispatch({ type: ALERT, payload: { success: res.data.msg } })\n  } catch (err: any) {\n    dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\n  }\n}\n\n\nexport const deleteBlog = (blog: IBlog, token: string) => \nasync (dispatch: Dispatch<IAlertType | IDeleteBlogsUserType>) => {\n  const result = await checkTokenExp(token, dispatch)\n  const access_token = result ? result : token\n  try {\n    dispatch({\n      type: DELETE_BLOGS_USER_ID,\n      payload: blog\n    })\n\n    await deleteAPI(`blog/${blog._id}`, access_token)\n\n  } catch (err: any) {\n    dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\n  }\n}"]},"metadata":{},"sourceType":"module"}