{"ast":null,"code":"import React from'react';import{useParams}from'react-router-dom';import NotFound from'./components/global/NotFound';import{jsx as _jsx}from\"react/jsx-runtime\";var generatePage=function generatePage(name){var component=function component(){return require(\"./pages/\".concat(name)).default;};try{return/*#__PURE__*/React.createElement(component());}catch(err){return/*#__PURE__*/_jsx(NotFound,{});}};var PageRender=function PageRender(){var _useParams=useParams(),page=_useParams.page,slug=_useParams.slug;var name='';if(page){name=slug?\"\".concat(page,\"/[slug]\"):\"\".concat(page);}return generatePage(name);};export default PageRender;","map":{"version":3,"sources":["C:/Users/nguye/Desktop/client/src/PageRender.tsx"],"names":["React","useParams","NotFound","generatePage","name","component","require","default","createElement","err","PageRender","page","slug"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,kBAA1B,CAEA,MAAOC,CAAAA,QAAP,KAAqB,8BAArB,C,2CAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAkB,CACrC,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,SAAMC,CAAAA,OAAO,mBAAYF,IAAZ,EAAP,CAA2BG,OAAjC,EAAlB,CAEA,GAAI,CACF,mBAAOP,KAAK,CAACQ,aAAN,CAAoBH,SAAS,EAA7B,CAAP,CACD,CAAC,MAAOI,GAAP,CAAY,CACZ,mBAAO,KAAC,QAAD,IAAP,CACD,CACF,CARD,CAUA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,eAAgCT,SAAS,EAAzC,CAAQU,IAAR,YAAQA,IAAR,CAAcC,IAAd,YAAcA,IAAd,CAEA,GAAIR,CAAAA,IAAI,CAAG,EAAX,CAEA,GAAGO,IAAH,CAAQ,CACNP,IAAI,CAAGQ,IAAI,WAAMD,IAAN,sBAAyBA,IAAzB,CAAX,CACD,CAED,MAAOR,CAAAA,YAAY,CAACC,IAAD,CAAnB,CACD,CAVD,CAYA,cAAeM,CAAAA,UAAf","sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { IParams } from './utils/TypeScript'\nimport NotFound from './components/global/NotFound'\n\n\nconst generatePage = (name: string) => {\n  const component = () => require(`./pages/${name}`).default\n\n  try {\n    return React.createElement(component())\n  } catch (err) {\n    return <NotFound />;\n  }\n}\n\nconst PageRender = () => {\n  const { page, slug }: IParams = useParams()\n\n  let name = '';\n\n  if(page){\n    name = slug ? `${page}/[slug]` : `${page}`\n  }\n\n  return generatePage(name)\n}\n\nexport default PageRender\n"]},"metadata":{},"sourceType":"module"}